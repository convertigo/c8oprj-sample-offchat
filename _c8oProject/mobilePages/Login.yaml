↑isRoot: true
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public window: any;
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.window = window;
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        '
segment: Login
title: Title for Login
↓Header [ngx.components.UIDynamicElement-1517567290269]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1517590376644]: 
    beanData: '{"ionBean":"ToolBar","IonColor":"plain:primary"}'
    tagName: ion-toolbar
    ↓BarTitle [ngx.components.UIDynamicElement-1517567324784]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓FormatLayout [ngx.components.UIDynamicAttr-1643627908844]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
        comment: FormatLayout
        tagName: div
      ↓Text [ngx.components.UIText-1517567331669]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:OffChat Login
    ↓ButtonSet [ngx.components.UIDynamicElement-1517591030309]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1517591030322]: 
        beanData: '{"ionBean":"Button","ButtonFormType":"plain:false"}'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1517591030335]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:ellipsis-vertical-outline"}'
          tagName: ion-icon
        ↓Event [ngx.components.UIControlEvent-1517825155947]: 
          attrName: (click)
          ↓CustomAction [ngx.components.UICustomAction-1517827010857]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		page.c8o.log.debug(event ? event.toString():''no event'');
                    		
                            let actionSheet = this.getInstance(ActionSheetController).create({
                                header: ''Reset your Database ?'',
                                buttons: [
                                  {
                                    text: ''Reset'',
                                    role: ''destructive'',
                                    icon: ''trash'',
                                    handler: () => {
                                      console.log(''Destructive clicked'');
                                      resolve();
                                    }
                                  },{
                                    text: ''Cancel'',
                                    role: ''cancel'',
                                    icon: ''close'',
                                    handler: () => {
                                      console.log(''Cancel clicked'');
                                    }
                                  }
                                ]
                              });
                    	      actionSheet.then((data) => {data.present()});
                    		
                    '
            module_ts_imports: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                - com.twinsoft.convertigo.beans.common.XMLVector: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                    - com.twinsoft.convertigo.beans.common.XMLVector: 
                      - java.lang.String: 
                        - ↑value: ActionSheetController 
                      - java.lang.String: 
                        - ↑value: ionic-angular
            ↓CallFullSync [ngx.components.UIDynamicAction-1517828045820]: 
              beanData: |
                '{
                 "ionBean": "CallFullSyncAction",
                 "requestable": "plain:sampleMobileOffChat.offchat_fullsync",
                 "verb": "plain:reset"
                }'
              ↓Toast [ngx.components.UIDynamicAction-1517828126515]: 
                beanData: '{"ionBean":"ToastAction","message":"plain:Reset done!"}'
↓Content [ngx.components.UIDynamicElement-1517567294948]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓CardContainer [ngx.components.UIDynamicElement-1517590561097]: 
    beanData: '{"ionBean":"Card"}'
    tagName: ion-card
    ↓CardContent [ngx.components.UIDynamicElement-1517590566688]: 
      beanData: '{"ionBean":"CardContent"}'
      tagName: ion-card-content
      ↓Form [ngx.components.UIForm-1517569296572]: 
        identifier: form1517569296572
        ↓Event [ngx.components.UIControlEvent-1517588818264]: 
          attrName: (ngSubmit)
          eventName: onSubmit
          ↓CallLogin [ngx.components.UIDynamicAction-1517588861783]: 
            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:sampleMobileOffChat.Login"}'
            ↓FailureHandler [ngx.components.UIActionFailureEvent-1518086125645]: 
              ↓Toast [ngx.components.UIDynamicAction-1518086718732]: 
                beanData: |
                  '{
                   "ionBean": "ToastAction",
                   "message": "plain:Network failure: Offline mode",
                   "duration": "plain:2000",
                   "position": "plain:top",
                   "cssClass": "plain:toast-error"
                  }'
                ↓CustomActionOffline [ngx.components.UICustomAction-1518086141924]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		if (props.stack["root"].in.username != window.localStorage.username) {
                          		    this.form1517569296572.controls["username"].setValue(window.localStorage.username);
                          		    reject("User cannot change, should be '" + window.localStorage.username + "'");
                          		}
                                  if (props.stack["root"].in.password != window.localStorage.password) {
                                      reject("Wrong password!");
                                  }
                                  window.sessionStorage.username = window.localStorage.username;
                                  window.sessionStorage.offline = true;
                                  window.document.body.className = "offline";
                          		resolve();
                          
                  ↓FailureHandler [ngx.components.UIActionFailureEvent-1518086795231]: 
                    ↓Toast [ngx.components.UIDynamicAction-1518086807380]: 
                      beanData: |
                        '{
                         "ionBean": "ToastAction",
                         "message": "script:out",
                         "duration": "plain:2000",
                         "position": "plain:top",
                         "cssClass": "plain:toast-error"
                        }'
                    ↓Error [ngx.components.UIDynamicAction-1518086813725]: 
                      beanData: '{"ionBean":"ErrorAction"}'
                  ↓RootPage [ngx.components.UIDynamicAction-1518086150793]: 
                    beanData: '{"ionBean":"RootPageAction","page":"plain:sampleMobileOffChat.OffChat.OffChat.Lobby"}'
              ↓Error [ngx.components.UIDynamicAction-1518086564258]: 
                beanData: '{"ionBean":"ErrorAction","message":"plain:offline"}'
            ↓If_ERROR [ngx.components.UIDynamicAction-1517840368874]: 
              beanData: '{"ionBean":"IfAction","condition":"script:out.error"}'
              ↓Toast [ngx.components.UIDynamicAction-1517828328158]: 
                beanData: |
                  '{
                   "ionBean": "ToastAction",
                   "message": "script:stack[\"CallLogin\"].out.error.message",
                   "position": "plain:top",
                   "cssClass": "plain:toast-error"
                  }'
            ↓If_OK [ngx.components.UIDynamicAction-1517840421888]: 
              beanData: '{"ionBean":"IfAction","condition":"script:out.ok"}'
              ↓CustomAction [ngx.components.UICustomAction-1517911129934]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		let localTs = new Date().getTime();
                        		let serverTs = props.stack["CallLogin"].out.ts * 1;
                        		window.localStorage.decTs = serverTs - localTs;
                                window.sessionStorage.offline = false;
                                window.document.body.className = "";
                        		
                        		page.c8o.log.debug(event ? event.toString():'no event');
                        		let user = window.sessionStorage.username = props.stack["root"].in.username;
                        		let exUser = window.localStorage.username;
                        		if (user != exUser) {
                        		    window.localStorage.username = user;
                        		    window.localStorage.password = props.stack["root"].in.password;
                        		    this.call('fs://offchat_fullsync.reset').then(function () {
                        		        resolve();
                        		    }, function () {
                        		        reject();
                        		    });
                        		} else {
                        	        resolve();
                        		}
                        
                ↓RootPage [ngx.components.UIDynamicAction-1517842566552]: 
                  beanData: '{"ionBean":"RootPageAction","page":"plain:sampleMobileOffChat.OffChat.OffChat.Sync"}'
        ↓ListContainer [ngx.components.UIDynamicElement-1517590290750]: 
          beanData: '{"ionBean":"List"}'
          tagName: ion-list
          ↓Username [ngx.components.UIDynamicElement-1517583518722]: 
            beanData: '{"ionBean":"ListItem"}'
            tagName: ion-item
            ↓LabelUsername [ngx.components.UIDynamicElement-1517567871069]: 
              beanData: '{"ionBean":"Label","Position":"plain:floating"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1517567903626]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Username :
            ↓Username [ngx.components.UIDynamicElement-1517567886976]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "ControlName": "plain:username",
                 "Debounce": "plain:0",
                 "Value": "script:this.window.localStorage.username"
                }'
              tagName: ion-input
            ↓Attr [ngx.components.UIAttribute-1517583820683]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:no-lines
          ↓Password [ngx.components.UIDynamicElement-1517583521117]: 
            beanData: '{"ionBean":"ListItem"}'
            tagName: ion-item
            ↓LabelPassword [ngx.components.UIDynamicElement-1517567880553]: 
              beanData: '{"ionBean":"Label","Position":"plain:floating"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1517567907991]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Password :
            ↓Password [ngx.components.UIDynamicElement-1517567889698]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "ControlName": "plain:password",
                 "Debounce": "plain:0",
                 "Type": "plain:password"
                }'
              tagName: ion-input
            ↓Attr [ngx.components.UIAttribute-1517583882602]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:no-lines
          ↓SubmitButton [ngx.components.UIDynamicElement-1517570142145]: 
            beanData: |
              '{
               "ionBean": "SubmitButton",
               "IonExpand": "plain:full",
               "IonShape": "plain:full"
              }'
            tagName: ion-button
            ↓Text [ngx.components.UIText-1517570175643]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Login
            ↓Style [ngx.components.UIStyle-1517580640478]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	margin-top: 20px;
                      	margin-bottom: 20px;
                      '
          ↓Paragraph [ngx.components.UIDynamicElement-1517583021362]: 
            beanData: '{"ionBean":"Paragraph"}'
            tagName: p
            ↓Fragment [ngx.components.UICustom-1517583057743]: 
              htmlTemplate: |
                '<b>Note</b>: {{ ''Account_creation'' | translate }} <b>{{ ''username'' | translate }}</b> {{ ''is_unknown'' | translate }}.
                  '
↓Footer [ngx.components.UIDynamicElement-1517567298829]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1517590656498]: 
    beanData: '{"ionBean":"ToolBar","IonColor":"plain:primary"}'
    tagName: ion-toolbar
    ↓Style [ngx.components.UIStyle-1517599585343]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '	text-align: center;
              	color: var(--ion-color-secondary);
              '
    ↓Text [ngx.components.UIText-1517599652753]: 
      i18n: true
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:© Convertigo
↓Style [ngx.components.UIStyle-1517585344021]: 
  styleContent: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          '.scroll-content {
          	overflow: hidden;
          }'